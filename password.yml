---
- name: Genrate and set random password on Remote Servers
  hosts: all
  gather_facts: no
  tasks:

    - name: Check if server are reachable or not
      ansible.builtin.ping:
      register: ping_result
      
    - debug:
        msg: "{{ ping_result }}"   
  
    - name: Generate Complex randome password
      set_fact:
        generated_password: "{{ lookup('community.general.random_string', length=12, min_lower=1, min_upper=1, min_numeric=1, min_special=1, override_special='-_=+!#$()[]') }}"

    - name: Set Password on the edge device
      ansible.builtin.lineinfile:
        path: /etc/shadow
        regexp: "{{ ansible_user | trim }}"
        line: "{{ ansible_user | trim }}:{{ generated_password | password_hash('sha512', 'mysecretsalt') }}:19918:0:99999:7:::"

    - name: Write password to Vault using key value V2 engine
      delegate_to: 127.0.0.1
      community.hashi_vault.vault_write:
        path: secret/data/dev/{{inventory_hostname}}
        data:
          data:
            password: "{{ generated_password }}"    
        
    - name: Change the banner to display IP on login screen
      ansible.builtin.copy:
        src: issue
        dest: /etc/issue
        owner: root
        group: root
        mode: '0644'

    - name: Genrate Email content
      ansible.builtin.template:
        src: alert_email_html.j2
        dest: /tmp/alert_email.html
      run_once: true  
      delegate_to: 127.0.0.1

    - name: Send email Alert
      mail:
        host: smtp.gmail.com
        port: 587
        subtype: html
        to:
        - "nrathi@redhat.com"
        subject: "Alert: Password Changed as per the org policy"
        body: "{{ lookup('file', '/tmp/alert_email.html') }}"
        username: "{{ lookup('hashi_vault', 'secret=secret/data/dev/email:user') }}"
        password: "{{ lookup('hashi_vault', 'secret=secret/data/dev/email:pass') }}"
      run_once: true  
      delegate_to: 127.0.0.1
      changed_when: True

