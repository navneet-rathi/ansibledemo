---
- hosts: all
  become: yes
  gather_facts: no
  tasks:  
    - name: calling a job name to invoke from system
      shell: wget https://google.com
      register: url_output
    
    - name: print debug output
      debug: 
        msg: "{{ url_output }}"    
      
    - name: print the output of some command
      shell: hostname
      register: output_hostname

    - name: print the debug output
      debug:  
        msg: "{{ output_hostname }}"  
   
    - name: calling url of remote site for testing
      shell: "wget {{ siteurl }}"
      register: url_output
      ignore_errors: true

    - name: print debug output
      debug:
        msg: "{{ url_output }}"
 
    - name : print jobid and name
      debug:
        msg: "{{ awx_job_id }} {{ awx_job_template_name }}"
      when: "{{ url_output.rc }} != 0"  

    - name: Sending an email using Ansible
      community.general.mail:
        host: smtp.gmail.com
        port: 587
        subtype: html
        username: dmeonavneet@gmail.com
        password: "rbfqhoincpyouxqk"
        to:
        - nrathi@redhat.com
        subject: Email By Ansible Automation Platform - about Failing job
        body: job has failing https://192.168.1.22/#/jobs/playbook/{{ awx_job_id }}/output {{ awx_job_template_name }} Please run the approval job it will wait for it\n url for approbal job is https://192.168.1.22/#/templates/job_template/19/details.
      when: "{{ url_output.rc }} != 0"  
            
    - name: Wait until the string "approved" is in the file /tmp/job before continuing or 1 min
      wait_for:
        path: /tmp/job
        search_regex: approved
#        timeout: 60
      when: "{{ url_output.rc }} != 0"
      
    - name: Check if job file is present   
      stat:
        path: /tmp/job
      register: register_name
      when: "{{ url_output.rc }} != 0"
      
    - name: Print Error at last if approval is not given
      debug:
        msg: "{{ url_output }}"
      when: not register_name.stat.exists 

#    - name: mark job success when mark ok workflow is ran 
#      shell: "exit 0"
#      when: "{{ url_output.rc }} != 0"
      
